/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein
 * is confidential and proprietary to MediaTek Inc. and/or its licensors.
 * Without the prior written permission of MediaTek inc. and/or its licensors,
 * any reproduction, modification, use or disclosure of MediaTek Software,
 * and information contained herein, in whole or in part, shall be strictly prohibited.
 */
/* MediaTek Inc. (C) 2010. All rights reserved.
 *
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
 * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
 * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
 * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
 * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
 * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
 * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
 * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
 * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
 * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
 * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
 * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
 * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 * The following software/firmware and/or related documentation ("MediaTek Software")
 * have been modified by MediaTek Inc. All revisions are subject to any receiver's
 * applicable license agreements with MediaTek Inc.
 */

/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2008
*
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
*
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/

#ifndef BUILD_LK
#include <linux/string.h>
#include <linux/kernel.h>
#endif

#include "lcm_drv.h"

#ifdef BUILD_LK
#include <platform/mt_gpio.h>
#include <debug.h>
#include <platform/mt_pmic.h>
#elif (defined BUILD_UBOOT)
#include <asm/arch/mt6577_gpio.h>
#else
#include <mach/mt_gpio.h>
#include <linux/xlog.h>
#endif


#if defined(BUILD_LK)
	#define LCM_DEBUG  printf
	#define LCM_FUNC_TRACE() printf("huyl [uboot] %s\n",__func__)
#else
	#define LCM_DEBUG  printk
	#define LCM_FUNC_TRACE() printk("huyl [kernel] %s\n",__func__)
#endif
// ---------------------------------------------------------------------------
//  Local Constants
// ---------------------------------------------------------------------------

#define FRAME_WIDTH  (1080)
#define FRAME_HEIGHT (1920)

#define LCM_ID_NT35596 (0x96)

#ifndef TRUE
    #define TRUE 1
#endif

#ifndef FALSE
    #define FALSE 0
#endif

static unsigned int lcm_esd_test = FALSE;      ///only for ESD test
static unsigned int lcm_manufactory = 0; // 0 -> weibaishi qingchuanggao COG; 1 -> qingchuanggao danboli; 2 -> henghao
// ---------------------------------------------------------------------------
//  Local Variables
// ---------------------------------------------------------------------------

static LCM_UTIL_FUNCS lcm_util = {0};

#define SET_RESET_PIN(v)    (lcm_util.set_reset_pin((v)))

#define UDELAY(n) (lcm_util.udelay(n))
#define MDELAY(n) (lcm_util.mdelay(n))

#define REGFLAG_DELAY             							0XFE
#define REGFLAG_END_OF_TABLE      							0x100   // END OF REGISTERS MARKER

// ---------------------------------------------------------------------------
//  Local Functions
// ---------------------------------------------------------------------------

#define dsi_set_cmdq_V2(cmd, count, ppara, force_update)	        lcm_util.dsi_set_cmdq_V2(cmd, count, ppara, force_update)
#define dsi_set_cmdq(pdata, queue_size, force_update)		lcm_util.dsi_set_cmdq(pdata, queue_size, force_update)
#define wrtie_cmd(cmd)										lcm_util.dsi_write_cmd(cmd)
#define write_regs(addr, pdata, byte_nums)					lcm_util.dsi_write_regs(addr, pdata, byte_nums)
#define read_reg(cmd)											lcm_util.dsi_dcs_read_lcm_reg(cmd)
#define read_reg_v2(cmd, buffer, buffer_size)   				lcm_util.dsi_dcs_read_lcm_reg_v2(cmd, buffer, buffer_size)

#define   LCM_DSI_CMD_MODE							0

struct LCM_setting_table {
    unsigned cmd;
    unsigned char count;
    unsigned char para_list[64];
};

extern int IMM_GetOneChannelValue(int dwChannel, int data[4], int* rawdata);

static struct LCM_setting_table lcm_initialization_setting[] = {
#if 0
{0xFF,  1  ,{0x05}},
{0xFB,  1  ,{0x01}},
{0xC5,  1  ,{0x01}}, //TURN ON
{REGFLAG_DELAY, 10, {}},

{0xFF,1,{0xEE}},
{0xFB,1,{0x01}},
{0x18,1,{0x40}},
{REGFLAG_DELAY, 10, {}},  
{0x18,1,{0x00}},
{REGFLAG_DELAY, 20, {}},

//AUO4.97+N,T35596_intial
{0xFF,  1  ,{0xEE}},//CMD page select
{0xFB,  1  ,{0x01}},//NON-RELOAD CMD
{0x1F,  1  ,{0x45}},
{0x24,  1  ,{0x4F}},
{0x38,  1  ,{0xC8}},
{0x39,  1  ,{0x2C}},
{0x1E,  1  ,{0xBB}},
{0x1D,  1  ,{0x0F}},
{0x7E,  1  ,{0xB1}},

{0xFF,  1  ,{0x00}}, //CMD page select
{0xFB,  1  ,{0x01}}, //NON-RELOAD CMD
{0x35,  1  ,{0x01}},

{0xFF,  1  ,{0x01}},//CMD page select
{0xFB,  1  ,{0x01}},//NON-RELOAD CMD
{0x00,  1  ,{0x01}},
{0x01,  1  ,{0x55}},
{0x02,  1  ,{0x40}},
{0x05,  1  ,{0x40}},
{0x06,  1  ,{0x4A}},
{0x07,  1  ,{0x24}},
{0x08,  1  ,{0x0C}},
{0x0B,  1  ,{0x87}},
{0x0C,  1  ,{0x87}},
{0x0E,  1  ,{0xB0}},
{0x0F,  1  ,{0xB3}},
{0x11,  1  ,{0x10}},
{0x12,  1  ,{0x10}},
{0x13,  1  ,{0x05}},
{0x14,  1  ,{0x4A}},
{0x15,  1  ,{0x18}},
{0x16,  1  ,{0x18}},
{0x18,  1  ,{0x00}},
{0x19,  1  ,{0x77}},
{0x1A,  1  ,{0x55}},
{0x1B,  1  ,{0x13}},
{0x1C,  1  ,{0x00}},
{0x1D,  1  ,{0x00}},
{0x1E,  1  ,{0x13}},
{0x1F,  1  ,{0x00}},
{0x23,  1  ,{0x00}},
{0x24,  1  ,{0x00}},
{0x25,  1  ,{0x00}},
{0x26,  1  ,{0x00}},
{0x27,  1  ,{0x00}},
{0x28,  1  ,{0x00}},
{0x35,  1  ,{0x00}},
{0x66,  1  ,{0x00}},
{0x58,  1  ,{0x82}},
{0x59,  1  ,{0x02}},
{0x5A,  1  ,{0x02}},
{0x5B,  1  ,{0x02}},
{0x5C,  1  ,{0x82}},
{0x5D,  1  ,{0x82}},
{0x5E,  1  ,{0x02}},
{0x5F,  1  ,{0x02}},
{0x72,  1  ,{0x31}},

{0xFF,  1  ,{0x05}},//CMD page select
{0xFB,  1  ,{0x01}},//NON-RELOAD CMD
{0x00,  1  ,{0x01}},
{0x01,  1  ,{0x0B}},
{0x02,  1  ,{0x0C}},
{0x03,  1  ,{0x09}},
{0x04,  1  ,{0x0A}},
{0x05,  1  ,{0x00}},
{0x06,  1  ,{0x0F}},
{0x07,  1  ,{0x10}},
{0x08,  1  ,{0x00}},
{0x09,  1  ,{0x00}},
{0x0A,  1  ,{0x00}},
{0x0B,  1  ,{0x00}},
{0x0C,  1  ,{0x00}},
{0x0D,  1  ,{0x13}},
{0x0E,  1  ,{0x15}},
{0x0F,  1  ,{0x17}},
{0x10,  1  ,{0x01}},
{0x11,  1  ,{0x0B}},
{0x12,  1  ,{0x0C}},
{0x13,  1  ,{0x09}},
{0x14,  1  ,{0x0A}},
{0x15,  1  ,{0x00}},
{0x16,  1  ,{0x0F}},
{0x17,  1  ,{0x10}},
{0x18,  1  ,{0x00}},
{0x19,  1  ,{0x00}},
{0x1A,  1  ,{0x00}},
{0x1B,  1  ,{0x00}},
{0x1C,  1  ,{0x00}},
{0x1D,  1  ,{0x13}},
{0x1E,  1  ,{0x15}},
{0x1F,  1  ,{0x17}},
{0x20,  1  ,{0x00}},
{0x21,  1  ,{0x03}},
{0x22,  1  ,{0x01}},
{0x23,  1  ,{0x40}},
{0x24,  1  ,{0x40}},
{0x25,  1  ,{0xED}},
{0x29,  1  ,{0x58}},
{0x2A,  1  ,{0x12}},
{0x2B,  1  ,{0x01}},
{0x4B,  1  ,{0x06}},
{0x4C,  1  ,{0x11}},
{0x4D,  1  ,{0x20}},
{0x4E,  1  ,{0x02}},
{0x4F,  1  ,{0x02}},
{0x50,  1  ,{0x20}},
{0x51,  1  ,{0x61}},
{0x52,  1  ,{0x01}},
{0x53,  1  ,{0x63}},
{0x54,  1  ,{0x77}},
{0x55,  1  ,{0xED}},
{0x5B,  1  ,{0x00}},
{0x5C,  1  ,{0x00}},
{0x5D,  1  ,{0x00}},
{0x5E,  1  ,{0x00}},
{0x5F,  1  ,{0x15}},
{0x60,  1  ,{0x75}},
{0x61,  1  ,{0x00}},
{0x62,  1  ,{0x00}},
{0x63,  1  ,{0x00}},
{0x64,  1  ,{0x00}},
{0x65,  1  ,{0x00}},
{0x66,  1  ,{0x00}},
{0x67,  1  ,{0x00}},
{0x68,  1  ,{0x04}},
{0x69,  1  ,{0x00}},
{0x6A,  1  ,{0x00}},
{0x6C,  1  ,{0x40}},
{0x75,  1  ,{0x01}},
{0x76,  1  ,{0x01}},
{0x7A,  1  ,{0x80}},
{0x7B,  1  ,{0xC5}},
{0x7C,  1  ,{0xD8}},
{0x7D,  1  ,{0x60}},
{0x7F,  1  ,{0x15}},
{0x80,  1  ,{0x81}},
{0x83,  1  ,{0x05}},
{0x93,  1  ,{0x08}},
{0x94,  1  ,{0x10}},
{0x8A,  1  ,{0x00}},
{0x9B,  1  ,{0x0F}},
{0xEA,  1  ,{0xFF}},
{0xEC,  1  ,{0x00}},

{0xFF,  1  ,{0x01}},//CMD page select
{0xFB,  1  ,{0x01}},//NON-RELOAD CMD
{0x75,  1  ,{0x00}},//Gamma R+
{0x76,  1  ,{0x18}},
{0x77,  1  ,{0x00}},
{0x78,  1  ,{0x38}},
{0x79,  1  ,{0x00}},
{0x7A,  1  ,{0x65}},
{0x7B,  1  ,{0x00}},
{0x7C,  1  ,{0x84}},
{0x7D,  1  ,{0x00}},
{0x7E,  1  ,{0x9B}},
{0x7F,  1  ,{0x00}},
{0x80,  1  ,{0xAF}},
{0x81,  1  ,{0x00}},
{0x82,  1  ,{0xC1}},
{0x83,  1  ,{0x00}},
{0x84,  1  ,{0xD2}},
{0x85,  1  ,{0x00}},
{0x86,  1  ,{0xDF}},
{0x87,  1  ,{0x01}},
{0x88,  1  ,{0x11}},
{0x89,  1  ,{0x01}},
{0x8A,  1  ,{0x38}},
{0x8B,  1  ,{0x01}},
{0x8C,  1  ,{0x76}},
{0x8D,  1  ,{0x01}},
{0x8E,  1  ,{0xA7}},
{0x8F,  1  ,{0x01}},
{0x90,  1  ,{0xF3}},
{0x91,  1  ,{0x02}},
{0x92,  1  ,{0x2F}},
{0x93,  1  ,{0x02}},
{0x94,  1  ,{0x30}},
{0x95,  1  ,{0x02}},
{0x96,  1  ,{0x66}},
{0x97,  1  ,{0x02}},
{0x98,  1  ,{0xA0}},
{0x99,  1  ,{0x02}},
{0x9A,  1  ,{0xC5}},
{0x9B,  1  ,{0x02}},
{0x9C,  1  ,{0xF8}},
{0x9D,  1  ,{0x03}},
{0x9E,  1  ,{0x1B}},
{0x9F,  1  ,{0x03}},
{0xA0,  1  ,{0x46}},
{0xA2,  1  ,{0x03}},
{0xA3,  1  ,{0x52}},
{0xA4,  1  ,{0x03}},
{0xA5,  1  ,{0x62}},
{0xA6,  1  ,{0x03}},
{0xA7,  1  ,{0x71}},
{0xA9,  1  ,{0x03}},
{0xAA,  1  ,{0x83}},
{0xAB,  1  ,{0x03}},
{0xAC,  1  ,{0x94}},
{0xAD,  1  ,{0x03}},
{0xAE,  1  ,{0xA3}},
{0xAF,  1  ,{0x03}},
{0xB0,  1  ,{0xAD}},
{0xB1,  1  ,{0x03}},
{0xB2,  1  ,{0xCC}},

{0xB3,  1  ,{0x00}},//Gamma R-
{0xB4,  1  ,{0x18}},
{0xB5,  1  ,{0x00}},
{0xB6,  1  ,{0x38}},
{0xB7,  1  ,{0x00}},
{0xB8,  1  ,{0x65}},
{0xB9,  1  ,{0x00}},
{0xBA,  1  ,{0x84}},
{0xBB,  1  ,{0x00}},
{0xBC,  1  ,{0x9B}},
{0xBD,  1  ,{0x00}},
{0xBE,  1  ,{0xAF}},
{0xBF,  1  ,{0x00}},
{0xC0,  1  ,{0xC1}},
{0xC1,  1  ,{0x00}},
{0xC2,  1  ,{0xD2}},
{0xC3,  1  ,{0x00}},
{0xC4,  1  ,{0xDF}},
{0xC5,  1  ,{0x01}},
{0xC6,  1  ,{0x11}},
{0xC7,  1  ,{0x01}},
{0xC8,  1  ,{0x38}},
{0xC9,  1  ,{0x01}},
{0xCA,  1  ,{0x76}},
{0xCB,  1  ,{0x01}},
{0xCC,  1  ,{0xA7}},
{0xCD,  1  ,{0x01}},
{0xCE,  1  ,{0xF3}},
{0xCF,  1  ,{0x02}},
{0xD0,  1  ,{0x2F}},
{0xD1,  1  ,{0x02}},
{0xD2,  1  ,{0x30}},
{0xD3,  1  ,{0x02}},
{0xD4,  1  ,{0x66}},
{0xD5,  1  ,{0x02}},
{0xD6,  1  ,{0xA0}},
{0xD7,  1  ,{0x02}},
{0xD8,  1  ,{0xC5}},
{0xD9,  1  ,{0x02}},
{0xDA,  1  ,{0xF8}},
{0xDB,  1  ,{0x03}},
{0xDC,  1  ,{0x1B}},
{0xDD,  1  ,{0x03}},
{0xDE,  1  ,{0x46}},
{0xDF,  1  ,{0x03}},
{0xE0,  1  ,{0x52}},
{0xE1,  1  ,{0x03}},
{0xE2,  1  ,{0x62}},
{0xE3,  1  ,{0x03}},
{0xE4,  1  ,{0x71}},
{0xE5,  1  ,{0x03}},
{0xE6,  1  ,{0x83}},
{0xE7,  1  ,{0x03}},
{0xE8,  1  ,{0x94}},
{0xE9,  1  ,{0x03}},
{0xEA,  1  ,{0xA3}},
{0xEB,  1  ,{0x03}},
{0xEC,  1  ,{0xAD}},
{0xED,  1  ,{0x03}},
{0xEE,  1  ,{0xCC}},

{0xEF,  1  ,{0x00}},//Gamma G+
{0xF0,  1  ,{0x18}},
{0xF1,  1  ,{0x00}},
{0xF2,  1  ,{0x38}},
{0xF3,  1  ,{0x00}},
{0xF4,  1  ,{0x65}},
{0xF5,  1  ,{0x00}},
{0xF6,  1  ,{0x84}},
{0xF7,  1  ,{0x00}},
{0xF8,  1  ,{0x9B}},
{0xF9,  1  ,{0x00}},
{0xFA,  1  ,{0xAF}},
{0xFF,  1  ,{0x02}}, //CMD page select
{0xFB,  1  ,{0x01}}, //NON-RELOAD CMD
{0x00,  1  ,{0x00}},
{0x01,  1  ,{0xC1}},
{0x02,  1  ,{0x00}},
{0x03,  1  ,{0xD2}},
{0x04,  1  ,{0x00}},
{0x05,  1  ,{0xDF}},
{0x06,  1  ,{0x01}},
{0x07,  1  ,{0x11}},
{0x08,  1  ,{0x01}},
{0x09,  1  ,{0x38}},
{0x0A,  1  ,{0x01}},
{0x0B,  1  ,{0x76}},
{0x0C,  1  ,{0x01}},
{0x0D,  1  ,{0xA7}},
{0x0E,  1  ,{0x01}},
{0x0F,  1  ,{0xF3}},
{0x10,  1  ,{0x02}},
{0x11,  1  ,{0x2F}},
{0x12,  1  ,{0x02}},
{0x13,  1  ,{0x30}},
{0x14,  1  ,{0x02}},
{0x15,  1  ,{0x66}},
{0x16,  1  ,{0x02}},
{0x17,  1  ,{0xA0}},
{0x18,  1  ,{0x02}},
{0x19,  1  ,{0xC5}},
{0x1A,  1  ,{0x02}},
{0x1B,  1  ,{0xF8}},
{0x1C,  1  ,{0x03}},
{0x1D,  1  ,{0x1B}},
{0x1E,  1  ,{0x03}},
{0x1F,  1  ,{0x46}},
{0x20,  1  ,{0x03}},
{0x21,  1  ,{0x52}},
{0x22,  1  ,{0x03}},
{0x23,  1  ,{0x62}},
{0x24,  1  ,{0x03}},
{0x25,  1  ,{0x71}},
{0x26,  1  ,{0x03}},
{0x27,  1  ,{0x83}},
{0x28,  1  ,{0x03}},
{0x29,  1  ,{0x94}},
{0x2A,  1  ,{0x03}},
{0x2B,  1  ,{0xA3}},
{0x2D,  1  ,{0x03}},
{0x2F,  1  ,{0xAD}},
{0x30,  1  ,{0x03}},
{0x31,  1  ,{0xCC}},

{0x32,  1  ,{0x00}},//Gamma G-
{0x33,  1  ,{0x18}},
{0x34,  1  ,{0x00}},
{0x35,  1  ,{0x38}},
{0x36,  1  ,{0x00}},
{0x37,  1  ,{0x65}},
{0x38,  1  ,{0x00}},
{0x39,  1  ,{0x84}},
{0x3A,  1  ,{0x00}},
{0x3B,  1  ,{0x9B}},
{0x3D,  1  ,{0x00}},
{0x3F,  1  ,{0xAF}},
{0x40,  1  ,{0x00}},
{0x41,  1  ,{0xC1}},
{0x42,  1  ,{0x00}},
{0x43,  1  ,{0xD2}},
{0x44,  1  ,{0x00}},
{0x45,  1  ,{0xDF}},
{0x46,  1  ,{0x01}},
{0x47,  1  ,{0x11}},
{0x48,  1  ,{0x01}},
{0x49,  1  ,{0x38}},
{0x4A,  1  ,{0x01}},
{0x4B,  1  ,{0x76}},
{0x4C,  1  ,{0x01}},
{0x4D,  1  ,{0xA7}},
{0x4E,  1  ,{0x01}},
{0x4F,  1  ,{0xF3}},
{0x50,  1  ,{0x02}},
{0x51,  1  ,{0x2F}},
{0x52,  1  ,{0x02}},
{0x53,  1  ,{0x30}},
{0x54,  1  ,{0x02}},
{0x55,  1  ,{0x66}},
{0x56,  1  ,{0x02}},
{0x58,  1  ,{0xA0}},
{0x59,  1  ,{0x02}},
{0x5A,  1  ,{0xC5}},
{0x5B,  1  ,{0x02}},
{0x5C,  1  ,{0xF8}},
{0x5D,  1  ,{0x03}},
{0x5E,  1  ,{0x1B}},
{0x5F,  1  ,{0x03}},
{0x60,  1  ,{0x46}},
{0x61,  1  ,{0x03}},
{0x62,  1  ,{0x52}},
{0x63,  1  ,{0x03}},
{0x64,  1  ,{0x62}},
{0x65,  1  ,{0x03}},
{0x66,  1  ,{0x71}},
{0x67,  1  ,{0x03}},
{0x68,  1  ,{0x83}},
{0x69,  1  ,{0x03}},
{0x6A,  1  ,{0x94}},
{0x6B,  1  ,{0x03}},
{0x6C,  1  ,{0xA3}},
{0x6D,  1  ,{0x03}},
{0x6E,  1  ,{0xAD}},
{0x6F,  1  ,{0x03}},
{0x70,  1  ,{0xCC}},

{0x71,  1  ,{0x00}},//Gamma B+
{0x72,  1  ,{0x18}},
{0x73,  1  ,{0x00}},
{0x74,  1  ,{0x38}},
{0x75,  1  ,{0x00}},
{0x76,  1  ,{0x65}},
{0x77,  1  ,{0x00}},
{0x78,  1  ,{0x84}},
{0x79,  1  ,{0x00}},
{0x7A,  1  ,{0x9B}},
{0x7B,  1  ,{0x00}},
{0x7C,  1  ,{0xAF}},
{0x7D,  1  ,{0x00}},
{0x7E,  1  ,{0xC1}},
{0x7F,  1  ,{0x00}},
{0x80,  1  ,{0xD2}},
{0x81,  1  ,{0x00}},
{0x82,  1  ,{0xDF}},
{0x83,  1  ,{0x01}},
{0x84,  1  ,{0x11}},
{0x85,  1  ,{0x01}},
{0x86,  1  ,{0x38}},
{0x87,  1  ,{0x01}},
{0x88,  1  ,{0x76}},
{0x89,  1  ,{0x01}},
{0x8A,  1  ,{0xA7}},
{0x8B,  1  ,{0x01}},
{0x8C,  1  ,{0xF3}},
{0x8D,  1  ,{0x02}},
{0x8E,  1  ,{0x2F}},
{0x8F,  1  ,{0x02}},
{0x90,  1  ,{0x30}},
{0x91,  1  ,{0x02}},
{0x92,  1  ,{0x66}},
{0x93,  1  ,{0x02}},
{0x94,  1  ,{0xA0}},
{0x95,  1  ,{0x02}},
{0x96,  1  ,{0xC5}},
{0x97,  1  ,{0x02}},
{0x98,  1  ,{0xF8}},
{0x99,  1  ,{0x03}},
{0x9A,  1  ,{0x1B}},
{0x9B,  1  ,{0x03}},
{0x9C,  1  ,{0x46}},
{0x9D,  1  ,{0x03}},
{0x9E,  1  ,{0x52}},
{0x9F,  1  ,{0x03}},
{0xA0,  1  ,{0x62}},
{0xA2,  1  ,{0x03}},
{0xA3,  1  ,{0x71}},
{0xA4,  1  ,{0x03}},
{0xA5,  1  ,{0x83}},
{0xA6,  1  ,{0x03}},
{0xA7,  1  ,{0x94}},
{0xA9,  1  ,{0x03}},
{0xAA,  1  ,{0xA3}},
{0xAB,  1  ,{0x03}},
{0xAC,  1  ,{0xAD}},
{0xAD,  1  ,{0x03}},
{0xAE,  1  ,{0xCC}},

{0xAF,  1  ,{0x00}},//Gamma B-
{0xB0,  1  ,{0x18}},
{0xB1,  1  ,{0x00}},
{0xB2,  1  ,{0x38}},
{0xB3,  1  ,{0x00}},
{0xB4,  1  ,{0x65}},
{0xB5,  1  ,{0x00}},
{0xB6,  1  ,{0x84}},
{0xB7,  1  ,{0x00}},
{0xB8,  1  ,{0x9B}},
{0xB9,  1  ,{0x00}},
{0xBA,  1  ,{0xAF}},
{0xBB,  1  ,{0x00}},
{0xBC,  1  ,{0xC1}},
{0xBD,  1  ,{0x00}},
{0xBE,  1  ,{0xD2}},
{0xBF,  1  ,{0x00}},
{0xC0,  1  ,{0xDF}},
{0xC1,  1  ,{0x01}},
{0xC2,  1  ,{0x11}},
{0xC3,  1  ,{0x01}},
{0xC4,  1  ,{0x38}},
{0xC5,  1  ,{0x01}},
{0xC6,  1  ,{0x76}},
{0xC7,  1  ,{0x01}},
{0xC8,  1  ,{0xA7}},
{0xC9,  1  ,{0x01}},
{0xCA,  1  ,{0xF3}},
{0xCB,  1  ,{0x02}},
{0xCC,  1  ,{0x2F}},
{0xCD,  1  ,{0x02}},
{0xCE,  1  ,{0x30}},
{0xCF,  1  ,{0x02}},
{0xD0,  1  ,{0x66}},
{0xD1,  1  ,{0x02}},
{0xD2,  1  ,{0xA0}},
{0xD3,  1  ,{0x02}},
{0xD4,  1  ,{0xC5}},
{0xD5,  1  ,{0x02}},
{0xD6,  1  ,{0xF8}},
{0xD7,  1  ,{0x03}},
{0xD8,  1  ,{0x1B}},
{0xD9,  1  ,{0x03}},
{0xDA,  1  ,{0x46}},
{0xDB,  1  ,{0x03}},
{0xDC,  1  ,{0x52}},
{0xDD,  1  ,{0x03}},
{0xDE,  1  ,{0x62}},
{0xDF,  1  ,{0x03}},
{0xE0,  1  ,{0x71}},
{0xE1,  1  ,{0x03}},
{0xE2,  1  ,{0x83}},
{0xE3,  1  ,{0x03}},
{0xE4,  1  ,{0x94}},
{0xE5,  1  ,{0x03}},
{0xE6,  1  ,{0xA3}},
{0xE7,  1  ,{0x03}},
{0xE8,  1  ,{0xAD}},
{0xE9,  1  ,{0x03}},
{0xEA,  1  ,{0xCC}},

{0xFF,  1  ,{0x01}},//CMD page select
{0xFB,  1  ,{0x01}},//NON-RELOAD CMD
{0xFF,  1  ,{0x02}},//CMD page select
{0xFB,  1  ,{0x01}},//NON-RELOAD CMD
{0xFF,  1  ,{0x04}},//CMD page select
{0xFB,  1  ,{0x01}},//NON-RELOAD CMD
{0xFF,  1  ,{0x00}},//CMD page select

{0xD3,  1  ,{0x05}},
{0xD4,  1  ,{0x04}},

{0x11,  0  ,{0x00}},//Sleep out
{REGFLAG_DELAY, 120, {}},
{0xFF,  1  ,{0x00}},
{0x35,  1  ,{0x00}},//TE on
{0x29,  0  ,{0x00}},//Display on
{REGFLAG_DELAY, 60, {}},


#else

//AUO5.46"FHD+NT35596_4LANE_MIPI initial
{0xFF,  1  ,{0xEE}},
{0xFB,  1  ,{0x01}},
{0x18,  1  ,{0x40}},
{REGFLAG_DELAY, 10, {}},
{0x18,  1  ,{0x00}},
{REGFLAG_DELAY, 20, {}},

{0xFF,  1  ,{0x05}},
{0xFB,  1  ,{0x01}},
{0xC5,  1  ,{0x31}},

{0xFF,  1  ,{0xEE}},
{0xFB,  1  ,{0x01}},

//{0x1F,  1  ,{0x45}},	//Not used for 3-PWR mode
{0x24,  1  ,{0x4F}},

{0x38,  1  ,{0xC8}},
{0x39,  1  ,{0x27}},
{0x1E,  1  ,{0x77}},
{0x1D,  1  ,{0x0F}},
{0x7E,  1  ,{0x71}},
{0x7C,  1  ,{0x31}},

//Move to CMD1
{0xFF,  1  ,{0x00}},
{0xFB,  1  ,{0x01}},
{0x35,  1  ,{0x01}},

{0xFF,  1  ,{0x01}},
{0xFB,  1  ,{0x01}},
{0x00,  1  ,{0x01}},
{0x01,  1  ,{0x55}},
{0x02,  1  ,{0x40}},
{0x05,  1  ,{0x40}},
{0x06,  1  ,{0x4A}},
{0x07,  1  ,{0x29}},//24
{0x08,  1  ,{0x0C}},
{0x0B,  1  ,{0x7D}},
{0x0C,  1  ,{0x7D}},
{0x0E,  1  ,{0xB0}},
{0x0F,  1  ,{0xAE}},
{0x11,  1  ,{0x10}},
{0x12,  1  ,{0x10}},
{0x13,  1  ,{0x03}},
{0x14,  1  ,{0x4A}},
{0x15,  1  ,{0x12}},
{0x16,  1  ,{0x12}},
{0x18,  1  ,{0x00}},
{0x19,  1  ,{0x77}},
{0x1A,  1  ,{0x55}},
{0x1B,  1  ,{0x13}},
{0x1C,  1  ,{0x00}},
{0x1D,  1  ,{0x00}},
{0x1E,  1  ,{0x13}},
{0x1F,  1  ,{0x00}},
{0x23,  1  ,{0x00}},
{0x24,  1  ,{0x00}},
{0x25,  1  ,{0x00}},
{0x26,  1  ,{0x00}},
{0x27,  1  ,{0x00}},
{0x28,  1  ,{0x00}},
{0x35,  1  ,{0x00}},
{0x66,  1  ,{0x00}},
{0x58,  1  ,{0x82}},
{0x59,  1  ,{0x02}},
{0x5A,  1  ,{0x02}},
{0x5B,  1  ,{0x02}},
{0x5C,  1  ,{0x82}},
{0x5D,  1  ,{0x82}},
{0x5E,  1  ,{0x02}},
{0x5F,  1  ,{0x02}},
{0x72,  1  ,{0x31}},

{0xFF,  1  ,{0x05}},
{0xFB,  1  ,{0x01}},
{0x00,  1  ,{0x01}},
{0x01,  1  ,{0x0B}},
{0x02,  1  ,{0x0C}},
{0x03,  1  ,{0x09}},
{0x04,  1  ,{0x0A}},
{0x05,  1  ,{0x00}},
{0x06,  1  ,{0x0F}},
{0x07,  1  ,{0x10}},
{0x08,  1  ,{0x00}},
{0x09,  1  ,{0x00}},
{0x0A,  1  ,{0x00}},
{0x0B,  1  ,{0x00}},
{0x0C,  1  ,{0x00}},
{0x0D,  1  ,{0x13}},
{0x0E,  1  ,{0x15}},
{0x0F,  1  ,{0x17}},
{0x10,  1  ,{0x01}},
{0x11,  1  ,{0x0B}},
{0x12,  1  ,{0x0C}},
{0x13,  1  ,{0x09}},
{0x14,  1  ,{0x0A}},
{0x15,  1  ,{0x00}},
{0x16,  1  ,{0x0F}},
{0x17,  1  ,{0x10}},
{0x18,  1  ,{0x00}},
{0x19,  1  ,{0x00}},
{0x1A,  1  ,{0x00}},
{0x1B,  1  ,{0x00}},
{0x1C,  1  ,{0x00}},
{0x1D,  1  ,{0x13}},
{0x1E,  1  ,{0x15}},
{0x1F,  1  ,{0x17}},
{0x20,  1  ,{0x00}},
{0x21,  1  ,{0x03}},
{0x22,  1  ,{0x01}},
{0x23,  1  ,{0x40}},
{0x24,  1  ,{0x40}},
{0x25,  1  ,{0xED}},
{0x29,  1  ,{0x58}},
{0x2A,  1  ,{0x12}},
{0x2B,  1  ,{0x01}},
{0x4B,  1  ,{0x06}},
{0x4C,  1  ,{0x11}},
{0x4D,  1  ,{0x20}},
{0x4E,  1  ,{0x02}},
{0x4F,  1  ,{0x02}},
{0x50,  1  ,{0x20}},
{0x51,  1  ,{0x61}},
{0x52,  1  ,{0x01}},
{0x53,  1  ,{0x63}},
{0x54,  1  ,{0x77}},
{0x55,  1  ,{0xED}},
{0x5B,  1  ,{0x00}},
{0x5C,  1  ,{0x00}},
{0x5D,  1  ,{0x00}},
{0x5E,  1  ,{0x00}},
{0x5F,  1  ,{0x15}},
{0x60,  1  ,{0x75}},
{0x61,  1  ,{0x00}},
{0x62,  1  ,{0x00}},
{0x63,  1  ,{0x00}},
{0x64,  1  ,{0x00}},
{0x65,  1  ,{0x00}},
{0x66,  1  ,{0x00}},
{0x67,  1  ,{0x00}},
{0x68,  1  ,{0x04}},
{0x69,  1  ,{0x00}},
{0x6A,  1  ,{0x00}},
{0x6C,  1  ,{0x40}},
{0x75,  1  ,{0x01}},
{0x76,  1  ,{0x01}},
{0x7A,  1  ,{0x80}},
{0x7B,  1  ,{0xA3}},
{0x7C,  1  ,{0xD8}},
{0x7D,  1  ,{0x60}},
{0x7F,  1  ,{0x15}},
{0x80,  1  ,{0x81}},
{0x83,  1  ,{0x05}},
{0x93,  1  ,{0x08}},
{0x94,  1  ,{0x10}},
{0x8A,  1  ,{0x00}},
{0x9B,  1  ,{0x0F}},
//{0xEA,  1  ,{0xFF}},	//FRM not used 
//{0xEC,  1  ,{0x00}},	//FRM not used 


{0xFF,  1  ,{0x01}},
{0xFB,  1  ,{0x01}},
{0x75,  1  ,{0x00}},
{0x76,  1  ,{0x9D}},
{0x77,  1  ,{0x00}},
{0x78,  1  ,{0xA2}},
{0x79,  1  ,{0x00}},
{0x7A,  1  ,{0xB0}},
{0x7B,  1  ,{0x00}},
{0x7C,  1  ,{0xBD}},
{0x7D,  1  ,{0x00}},
{0x7E,  1  ,{0xC9}},
{0x7F,  1  ,{0x00}},
{0x80,  1  ,{0xD4}},
{0x81,  1  ,{0x00}},
{0x82,  1  ,{0xDF}},
{0x83,  1  ,{0x00}},
{0x84,  1  ,{0xE9}},
{0x85,  1  ,{0x00}},
{0x86,  1  ,{0xF2}},
{0x87,  1  ,{0x01}},
{0x88,  1  ,{0x17}},
{0x89,  1  ,{0x01}},
{0x8A,  1  ,{0x36}},
{0x8B,  1  ,{0x01}},
{0x8C,  1  ,{0x6B}},
{0x8D,  1  ,{0x01}},
{0x8E,  1  ,{0x98}},
{0x8F,  1  ,{0x01}},
{0x90,  1  ,{0xE0}},
{0x91,  1  ,{0x02}},
{0x92,  1  ,{0x19}},
{0x93,  1  ,{0x02}},
{0x94,  1  ,{0x1A}},
{0x95,  1  ,{0x02}},
{0x96,  1  ,{0x4E}},
{0x97,  1  ,{0x02}},
{0x98,  1  ,{0x85}},
{0x99,  1  ,{0x02}},
{0x9A,  1  ,{0xA9}},
{0x9B,  1  ,{0x02}},
{0x9C,  1  ,{0xD9}},
{0x9D,  1  ,{0x02}},
{0x9E,  1  ,{0xFB}},
{0x9F,  1  ,{0x03}},
{0xA0,  1  ,{0x28}},
{0xA2,  1  ,{0x03}},
{0xA3,  1  ,{0x35}},
{0xA4,  1  ,{0x03}},
{0xA5,  1  ,{0x44}},
{0xA6,  1  ,{0x03}},
{0xA7,  1  ,{0x54}},
{0xA9,  1  ,{0x03}},
{0xAA,  1  ,{0x67}},
{0xAB,  1  ,{0x03}},
{0xAC,  1  ,{0x7D}},
{0xAD,  1  ,{0x03}},
{0xAE,  1  ,{0x91}},
{0xAF,  1  ,{0x03}},
{0xB0,  1  ,{0xA7}},
{0xB1,  1  ,{0x03}},
{0xB2,  1  ,{0xCB}},
{0xB3,  1  ,{0x00}},
{0xB4,  1  ,{0x9D}},
{0xB5,  1  ,{0x00}},
{0xB6,  1  ,{0xA2}},
{0xB7,  1  ,{0x00}},
{0xB8,  1  ,{0xB0}},
{0xB9,  1  ,{0x00}},
{0xBA,  1  ,{0xBD}},
{0xBB,  1  ,{0x00}},
{0xBC,  1  ,{0xC9}},
{0xBD,  1  ,{0x00}},
{0xBE,  1  ,{0xD4}},
{0xBF,  1  ,{0x00}},
{0xC0,  1  ,{0xDF}},
{0xC1,  1  ,{0x00}},
{0xC2,  1  ,{0xE9}},
{0xC3,  1  ,{0x00}},
{0xC4,  1  ,{0xF2}},
{0xC5,  1  ,{0x01}},
{0xC6,  1  ,{0x17}},
{0xC7,  1  ,{0x01}},
{0xC8,  1  ,{0x36}},
{0xC9,  1  ,{0x01}},
{0xCA,  1  ,{0x6B}},
{0xCB,  1  ,{0x01}},
{0xCC,  1  ,{0x98}},
{0xCD,  1  ,{0x01}},
{0xCE,  1  ,{0xE0}},
{0xCF,  1  ,{0x02}},
{0xD0,  1  ,{0x19}},
{0xD1,  1  ,{0x02}},
{0xD2,  1  ,{0x1A}},
{0xD3,  1  ,{0x02}},
{0xD4,  1  ,{0x4E}},
{0xD5,  1  ,{0x02}},
{0xD6,  1  ,{0x85}},
{0xD7,  1  ,{0x02}},
{0xD8,  1  ,{0xA9}},
{0xD9,  1  ,{0x02}},
{0xDA,  1  ,{0xD9}},
{0xDB,  1  ,{0x02}},
{0xDC,  1  ,{0xFB}},
{0xDD,  1  ,{0x03}},
{0xDE,  1  ,{0x28}},
{0xDF,  1  ,{0x03}},
{0xE0,  1  ,{0x35}},
{0xE1,  1  ,{0x03}},
{0xE2,  1  ,{0x44}},
{0xE3,  1  ,{0x03}},
{0xE4,  1  ,{0x54}},
{0xE5,  1  ,{0x03}},
{0xE6,  1  ,{0x67}},
{0xE7,  1  ,{0x03}},
{0xE8,  1  ,{0x7D}},
{0xE9,  1  ,{0x03}},
{0xEA,  1  ,{0x91}},
{0xEB,  1  ,{0x03}},
{0xEC,  1  ,{0xA7}},
{0xED,  1  ,{0x03}},
{0xEE,  1  ,{0xCB}},
{0xEF,  1  ,{0x00}},
{0xF0,  1  ,{0x7D}},
{0xF1,  1  ,{0x00}},
{0xF2,  1  ,{0x81}},
{0xF3,  1  ,{0x00}},
{0xF4,  1  ,{0x94}},
{0xF5,  1  ,{0x00}},
{0xF6,  1  ,{0xA2}},
{0xF7,  1  ,{0x00}},
{0xF8,  1  ,{0xAF}},
{0xF9,  1  ,{0x00}},
{0xFA,  1  ,{0xBC}},
{0xFF,  1  ,{0x02}},
{0xFB,  1  ,{0x01}},
{0x00,  1  ,{0x00}},
{0x01,  1  ,{0xC8}},
{0x02,  1  ,{0x00}},
{0x03,  1  ,{0xD4}},
{0x04,  1  ,{0x00}},
{0x05,  1  ,{0xDF}},
{0x06,  1  ,{0x01}},
{0x07,  1  ,{0x06}},
{0x08,  1  ,{0x01}},
{0x09,  1  ,{0x28}},
{0x0A,  1  ,{0x01}},
{0x0B,  1  ,{0x61}},
{0x0C,  1  ,{0x01}},
{0x0D,  1  ,{0x8F}},
{0x0E,  1  ,{0x01}},
{0x0F,  1  ,{0xDA}},
{0x10,  1  ,{0x02}},
{0x11,  1  ,{0x15}},
{0x12,  1  ,{0x02}},
{0x13,  1  ,{0x17}},
{0x14,  1  ,{0x02}},
{0x15,  1  ,{0x4C}},
{0x16,  1  ,{0x02}},
{0x17,  1  ,{0x83}},
{0x18,  1  ,{0x02}},
{0x19,  1  ,{0xA7}},
{0x1A,  1  ,{0x02}},
{0x1B,  1  ,{0xD8}},
{0x1C,  1  ,{0x02}},
{0x1D,  1  ,{0xFA}},
{0x1E,  1  ,{0x03}},
{0x1F,  1  ,{0x27}},
{0x20,  1  ,{0x03}},
{0x21,  1  ,{0x35}},
{0x22,  1  ,{0x03}},
{0x23,  1  ,{0x44}},
{0x24,  1  ,{0x03}},
{0x25,  1  ,{0x55}},
{0x26,  1  ,{0x03}},
{0x27,  1  ,{0x67}},
{0x28,  1  ,{0x03}},
{0x29,  1  ,{0x7F}},
{0x2A,  1  ,{0x03}},
{0x2B,  1  ,{0x92}},
{0x2D,  1  ,{0x03}},
{0x2F,  1  ,{0xAA}},
{0x30,  1  ,{0x03}},
{0x31,  1  ,{0xCB}},
{0x32,  1  ,{0x00}},
{0x33,  1  ,{0x7D}},
{0x34,  1  ,{0x00}},
{0x35,  1  ,{0x81}},
{0x36,  1  ,{0x00}},
{0x37,  1  ,{0x94}},
{0x38,  1  ,{0x00}},
{0x39,  1  ,{0xA2}},
{0x3A,  1  ,{0x00}},
{0x3B,  1  ,{0xAF}},
{0x3D,  1  ,{0x00}},
{0x3F,  1  ,{0xBC}},
{0x40,  1  ,{0x00}},
{0x41,  1  ,{0xC8}},
{0x42,  1  ,{0x00}},
{0x43,  1  ,{0xD4}},
{0x44,  1  ,{0x00}},
{0x45,  1  ,{0xDF}},
{0x46,  1  ,{0x01}},
{0x47,  1  ,{0x06}},
{0x48,  1  ,{0x01}},
{0x49,  1  ,{0x28}},
{0x4A,  1  ,{0x01}},
{0x4B,  1  ,{0x61}},
{0x4C,  1  ,{0x01}},
{0x4D,  1  ,{0x8F}},
{0x4E,  1  ,{0x01}},
{0x4F,  1  ,{0xDA}},
{0x50,  1  ,{0x02}},
{0x51,  1  ,{0x15}},
{0x52,  1  ,{0x02}},
{0x53,  1  ,{0x17}},
{0x54,  1  ,{0x02}},
{0x55,  1  ,{0x4C}},
{0x56,  1  ,{0x02}},
{0x58,  1  ,{0x83}},
{0x59,  1  ,{0x02}},
{0x5A,  1  ,{0xA7}},
{0x5B,  1  ,{0x02}},
{0x5C,  1  ,{0xD8}},
{0x5D,  1  ,{0x02}},
{0x5E,  1  ,{0xFA}},
{0x5F,  1  ,{0x03}},
{0x60,  1  ,{0x27}},
{0x61,  1  ,{0x03}},
{0x62,  1  ,{0x35}},
{0x63,  1  ,{0x03}},
{0x64,  1  ,{0x44}},
{0x65,  1  ,{0x03}},
{0x66,  1  ,{0x55}},
{0x67,  1  ,{0x03}},
{0x68,  1  ,{0x67}},
{0x69,  1  ,{0x03}},
{0x6A,  1  ,{0x7F}},
{0x6B,  1  ,{0x03}},
{0x6C,  1  ,{0x92}},
{0x6D,  1  ,{0x03}},
{0x6E,  1  ,{0xAA}},
{0x6F,  1  ,{0x03}},
{0x70,  1  ,{0xCB}},
{0x71,  1  ,{0x00}},
{0x72,  1  ,{0x00}},
{0x73,  1  ,{0x00}},
{0x74,  1  ,{0x21}},
{0x75,  1  ,{0x00}},
{0x76,  1  ,{0x4C}},
{0x77,  1  ,{0x00}},
{0x78,  1  ,{0x6B}},
{0x79,  1  ,{0x00}},
{0x7A,  1  ,{0x85}},
{0x7B,  1  ,{0x00}},
{0x7C,  1  ,{0x9A}},
{0x7D,  1  ,{0x00}},
{0x7E,  1  ,{0xAD}},
{0x7F,  1  ,{0x00}},
{0x80,  1  ,{0xBE}},
{0x81,  1  ,{0x00}},
{0x82,  1  ,{0xCD}},
{0x83,  1  ,{0x01}},
{0x84,  1  ,{0x01}},
{0x85,  1  ,{0x01}},
{0x86,  1  ,{0x29}},
{0x87,  1  ,{0x01}},
{0x88,  1  ,{0x68}},
{0x89,  1  ,{0x01}},
{0x8A,  1  ,{0x98}},
{0x8B,  1  ,{0x01}},
{0x8C,  1  ,{0xE5}},
{0x8D,  1  ,{0x02}},
{0x8E,  1  ,{0x1E}},
{0x8F,  1  ,{0x02}},
{0x90,  1  ,{0x20}},
{0x91,  1  ,{0x02}},
{0x92,  1  ,{0x52}},
{0x93,  1  ,{0x02}},
{0x94,  1  ,{0x88}},
{0x95,  1  ,{0x02}},
{0x96,  1  ,{0xAA}},
{0x97,  1  ,{0x02}},
{0x98,  1  ,{0xD7}},
{0x99,  1  ,{0x02}},
{0x9A,  1  ,{0xF7}},
{0x9B,  1  ,{0x03}},
{0x9C,  1  ,{0x21}},
{0x9D,  1  ,{0x03}},
{0x9E,  1  ,{0x2E}},
{0x9F,  1  ,{0x03}},
{0xA0,  1  ,{0x3D}},
{0xA2,  1  ,{0x03}},
{0xA3,  1  ,{0x4C}},
{0xA4,  1  ,{0x03}},
{0xA5,  1  ,{0x5E}},
{0xA6,  1  ,{0x03}},
{0xA7,  1  ,{0x71}},
{0xA9,  1  ,{0x03}},
{0xAA,  1  ,{0x86}},
{0xAB,  1  ,{0x03}},
{0xAC,  1  ,{0x94}},
{0xAD,  1  ,{0x03}},
{0xAE,  1  ,{0xFA}},
{0xAF,  1  ,{0x00}},
{0xB0,  1  ,{0x00}},
{0xB1,  1  ,{0x00}},
{0xB2,  1  ,{0x21}},
{0xB3,  1  ,{0x00}},
{0xB4,  1  ,{0x4C}},
{0xB5,  1  ,{0x00}},
{0xB6,  1  ,{0x6B}},
{0xB7,  1  ,{0x00}},
{0xB8,  1  ,{0x85}},
{0xB9,  1  ,{0x00}},
{0xBA,  1  ,{0x9A}},
{0xBB,  1  ,{0x00}},
{0xBC,  1  ,{0xAD}},
{0xBD,  1  ,{0x00}},
{0xBE,  1  ,{0xBE}},
{0xBF,  1  ,{0x00}},
{0xC0,  1  ,{0xCD}},
{0xC1,  1  ,{0x01}},
{0xC2,  1  ,{0x01}},
{0xC3,  1  ,{0x01}},
{0xC4,  1  ,{0x29}},
{0xC5,  1  ,{0x01}},
{0xC6,  1  ,{0x68}},
{0xC7,  1  ,{0x01}},
{0xC8,  1  ,{0x98}},
{0xC9,  1  ,{0x01}},
{0xCA,  1  ,{0xE5}},
{0xCB,  1  ,{0x02}},
{0xCC,  1  ,{0x1E}},
{0xCD,  1  ,{0x02}},
{0xCE,  1  ,{0x20}},
{0xCF,  1  ,{0x02}},
{0xD0,  1  ,{0x52}},
{0xD1,  1  ,{0x02}},
{0xD2,  1  ,{0x88}},
{0xD3,  1  ,{0x02}},
{0xD4,  1  ,{0xAA}},
{0xD5,  1  ,{0x02}},
{0xD6,  1  ,{0xD7}},
{0xD7,  1  ,{0x02}},
{0xD8,  1  ,{0xF7}},
{0xD9,  1  ,{0x03}},
{0xDA,  1  ,{0x21}},
{0xDB,  1  ,{0x03}},
{0xDC,  1  ,{0x2E}},
{0xDD,  1  ,{0x03}},
{0xDE,  1  ,{0x3D}},
{0xDF,  1  ,{0x03}},
{0xE0,  1  ,{0x4C}},
{0xE1,  1  ,{0x03}},
{0xE2,  1  ,{0x5E}},
{0xE3,  1  ,{0x03}},
{0xE4,  1  ,{0x71}},
{0xE5,  1  ,{0x03}},
{0xE6,  1  ,{0x86}},
{0xE7,  1  ,{0x03}},
{0xE8,  1  ,{0x94}},
{0xE9,  1  ,{0x03}},
{0xEA,  1  ,{0xFA}},


{0xFF,  1  ,{0x01}},
{0xFB,  1  ,{0x01}},
{0xFF,  1  ,{0x02}},
{0xFB,  1  ,{0x01}},
{0xFF,  1  ,{0x04}},
{0xFB,  1  ,{0x01}},
{0xFF,  1  ,{0x00}},

{0xD3,  1  ,{0x05}}, //0x05
{0xD4,  1  ,{0x04}}, //0x04

{0x11,  0  ,{0x00}},//Sleep out
{REGFLAG_DELAY, 120, {}},

{0xFF,  1  ,{0x00}},
//{0x34,  1  ,{0x00}},	//SET_TEAR_OFF
{0x35,  1  ,{0x00}},	//SET_TEAR_ON

{0x29,  0  ,{0x00}},//Display on
{REGFLAG_DELAY, 60, {}},

//CABC setting
/*

{0x51,  1  ,{0xxx}},
{0x5E,  1  ,{0xxx}},
{0x53,  1  ,{0x2C}},
{0x55,  1  ,{0x0x}},
*/
#endif


{REGFLAG_END_OF_TABLE, 0x00, {}}

};

static struct LCM_setting_table lcm_initialization_qcg_dbl_setting[] = {
//AUO5.46"FHD+NT35596_4LANE_MIPI initial
{0xFF,  1  ,{0xEE}},
{0xFB,  1  ,{0x01}},
{0x18,  1  ,{0x40}},
{REGFLAG_DELAY, 10, {}},
{0x18,  1  ,{0x00}},
{REGFLAG_DELAY, 20, {}},

{0xFF,  1  ,{0x05}},
{0xE7,  1  ,{0X80}},
{0xFB,  1  ,{0x01}},
{0xC5,  1  ,{0x31}},
{0xFF,  1  ,{0xEE}},
{0xFB,  1  ,{0x01}},
{0x24,  1  ,{0x36}},
{0x25,  1  ,{0x01}},

{0x38,  1  ,{0xC8}},
{0x39,  1  ,{0x27}},
{0x1E,  1  ,{0x77}},
{0x1D,  1  ,{0x0F}},
{0x7E,  1  ,{0x71}},
{0x7C,  1  ,{0x31}},

{0xFF,  1  ,{0x00}},
{0xFB,  1  ,{0x01}},
{0x35,  1  ,{0x01}},

{0xFF,  1  ,{0x01}},
{0xFB,  1  ,{0x01}},
{0x00,  1  ,{0x01}},
{0x01,  1  ,{0x55}},
{0x02,  1  ,{0x40}},
{0x05,  1  ,{0x40}},
{0x06,  1  ,{0x4A}},
{0x07,  1  ,{0x24}},//24
{0x08,  1  ,{0x0C}},
{0x0B,  1  ,{0x7D}},
{0x0C,  1  ,{0x7D}},
{0x0E,  1  ,{0xB0}},
{0x0F,  1  ,{0xAE}},
{0x11,  1  ,{0x10}},
{0x12,  1  ,{0x10}},
{0x13,  1  ,{0x03}},
{0x14,  1  ,{0x4A}},
{0x15,  1  ,{0x12}},
{0x16,  1  ,{0x12}},
{0x18,  1  ,{0x00}},
{0x19,  1  ,{0x77}},
{0x1A,  1  ,{0x55}},
{0x1B,  1  ,{0x13}},
{0x1C,  1  ,{0x00}},
{0x1D,  1  ,{0x00}},
{0x1E,  1  ,{0x13}},
{0x1F,  1  ,{0x00}},
{0x23,  1  ,{0x00}},
{0x24,  1  ,{0x00}},
{0x25,  1  ,{0x00}},
{0x26,  1  ,{0x00}},
{0x27,  1  ,{0x00}},
{0x28,  1  ,{0x00}},
{0x35,  1  ,{0x00}},
{0x66,  1  ,{0x00}},
{0x58,  1  ,{0x82}},
{0x59,  1  ,{0x02}},
{0x5A,  1  ,{0x02}},
{0x5B,  1  ,{0x02}},
{0x5C,  1  ,{0x82}},
{0x5D,  1  ,{0x82}},
{0x5E,  1  ,{0x02}},
{0x5F,  1  ,{0x02}},
{0x72,  1  ,{0x31}},

{0xFF,  1  ,{0x05}},
{0xFB,  1  ,{0x01}},
{0x00,  1  ,{0x01}},
{0x01,  1  ,{0x0B}},
{0x02,  1  ,{0x0C}},
{0x03,  1  ,{0x09}},
{0x04,  1  ,{0x0A}},
{0x05,  1  ,{0x00}},
{0x06,  1  ,{0x0F}},
{0x07,  1  ,{0x10}},
{0x08,  1  ,{0x00}},
{0x09,  1  ,{0x00}},
{0x0A,  1  ,{0x00}},
{0x0B,  1  ,{0x00}},
{0x0C,  1  ,{0x00}},
{0x0D,  1  ,{0x13}},
{0x0E,  1  ,{0x15}},
{0x0F,  1  ,{0x17}},
{0x10,  1  ,{0x01}},
{0x11,  1  ,{0x0B}},
{0x12,  1  ,{0x0C}},
{0x13,  1  ,{0x09}},
{0x14,  1  ,{0x0A}},
{0x15,  1  ,{0x00}},
{0x16,  1  ,{0x0F}},
{0x17,  1  ,{0x10}},
{0x18,  1  ,{0x00}},
{0x19,  1  ,{0x00}},
{0x1A,  1  ,{0x00}},
{0x1B,  1  ,{0x00}},
{0x1C,  1  ,{0x00}},
{0x1D,  1  ,{0x13}},
{0x1E,  1  ,{0x15}},
{0x1F,  1  ,{0x17}},
{0x20,  1  ,{0x00}},
{0x21,  1  ,{0x03}},
{0x22,  1  ,{0x01}},
{0x23,  1  ,{0x40}},
{0x24,  1  ,{0x40}},
{0x25,  1  ,{0xED}},
{0x29,  1  ,{0x58}},
{0x2A,  1  ,{0x12}},
{0x2B,  1  ,{0x01}},
{0x4B,  1  ,{0x06}},
{0x4C,  1  ,{0x11}},
{0x4D,  1  ,{0x20}},
{0x4E,  1  ,{0x02}},
{0x4F,  1  ,{0x02}},
{0x50,  1  ,{0x20}},
{0x51,  1  ,{0x61}},
{0x52,  1  ,{0x01}},
{0x53,  1  ,{0x63}},
{0x54,  1  ,{0x77}},
{0x55,  1  ,{0xED}},
{0x5B,  1  ,{0x00}},
{0x5C,  1  ,{0x00}},
{0x5D,  1  ,{0x00}},
{0x5E,  1  ,{0x00}},
{0x5F,  1  ,{0x15}},
{0x60,  1  ,{0x75}},
{0x61,  1  ,{0x00}},
{0x62,  1  ,{0x00}},
{0x63,  1  ,{0x00}},
{0x64,  1  ,{0x00}},
{0x65,  1  ,{0x00}},
{0x66,  1  ,{0x00}},
{0x67,  1  ,{0x00}},
{0x68,  1  ,{0x04}},
{0x69,  1  ,{0x00}},
{0x6A,  1  ,{0x00}},
{0x6C,  1  ,{0x40}},
{0x75,  1  ,{0x01}},
{0x76,  1  ,{0x01}},
{0x7A,  1  ,{0x80}},
{0x7B,  1  ,{0xA3}},
{0x7C,  1  ,{0xD8}},
{0x7D,  1  ,{0x60}},
{0x7F,  1  ,{0x15}},
{0x80,  1  ,{0x81}},
{0x83,  1  ,{0x05}},
{0x93,  1  ,{0x08}},
{0x94,  1  ,{0x10}},
{0x8A,  1  ,{0x00}},
{0x9B,  1  ,{0x0F}},

{0xFF,  1  ,{0x01}},
{0xFB,  1  ,{0x01}},
{0x75,  1  ,{0x00}},
{0x76,  1  ,{0x9D}},
{0x77,  1  ,{0x00}},
{0x78,  1  ,{0xA2}},
{0x79,  1  ,{0x00}},
{0x7A,  1  ,{0xB0}},
{0x7B,  1  ,{0x00}},
{0x7C,  1  ,{0xBD}},
{0x7D,  1  ,{0x00}},
{0x7E,  1  ,{0xC9}},
{0x7F,  1  ,{0x00}},
{0x80,  1  ,{0xD4}},
{0x81,  1  ,{0x00}},
{0x82,  1  ,{0xDF}},
{0x83,  1  ,{0x00}},
{0x84,  1  ,{0xE9}},
{0x85,  1  ,{0x00}},
{0x86,  1  ,{0xF2}},
{0x87,  1  ,{0x01}},
{0x88,  1  ,{0x17}},
{0x89,  1  ,{0x01}},
{0x8A,  1  ,{0x36}},
{0x8B,  1  ,{0x01}},
{0x8C,  1  ,{0x6B}},
{0x8D,  1  ,{0x01}},
{0x8E,  1  ,{0x98}},
{0x8F,  1  ,{0x01}},
{0x90,  1  ,{0xE0}},
{0x91,  1  ,{0x02}},
{0x92,  1  ,{0x19}},
{0x93,  1  ,{0x02}},
{0x94,  1  ,{0x1A}},
{0x95,  1  ,{0x02}},
{0x96,  1  ,{0x4E}},
{0x97,  1  ,{0x02}},
{0x98,  1  ,{0x85}},
{0x99,  1  ,{0x02}},
{0x9A,  1  ,{0xA9}},
{0x9B,  1  ,{0x02}},
{0x9C,  1  ,{0xD9}},
{0x9D,  1  ,{0x02}},
{0x9E,  1  ,{0xFB}},
{0x9F,  1  ,{0x03}},
{0xA0,  1  ,{0x28}},
{0xA2,  1  ,{0x03}},
{0xA3,  1  ,{0x35}},
{0xA4,  1  ,{0x03}},
{0xA5,  1  ,{0x44}},
{0xA6,  1  ,{0x03}},
{0xA7,  1  ,{0x54}},
{0xA9,  1  ,{0x03}},
{0xAA,  1  ,{0x67}},
{0xAB,  1  ,{0x03}},
{0xAC,  1  ,{0x7D}},
{0xAD,  1  ,{0x03}},
{0xAE,  1  ,{0x91}},
{0xAF,  1  ,{0x03}},
{0xB0,  1  ,{0xA7}},
{0xB1,  1  ,{0x03}},
{0xB2,  1  ,{0xCB}},
{0xB3,  1  ,{0x00}},
{0xB4,  1  ,{0x9D}},
{0xB5,  1  ,{0x00}},
{0xB6,  1  ,{0xA2}},
{0xB7,  1  ,{0x00}},
{0xB8,  1  ,{0xB0}},
{0xB9,  1  ,{0x00}},
{0xBA,  1  ,{0xBD}},
{0xBB,  1  ,{0x00}},
{0xBC,  1  ,{0xC9}},
{0xBD,  1  ,{0x00}},
{0xBE,  1  ,{0xD4}},
{0xBF,  1  ,{0x00}},
{0xC0,  1  ,{0xDF}},
{0xC1,  1  ,{0x00}},
{0xC2,  1  ,{0xE9}},
{0xC3,  1  ,{0x00}},
{0xC4,  1  ,{0xF2}},
{0xC5,  1  ,{0x01}},
{0xC6,  1  ,{0x17}},
{0xC7,  1  ,{0x01}},
{0xC8,  1  ,{0x36}},
{0xC9,  1  ,{0x01}},
{0xCA,  1  ,{0x6B}},
{0xCB,  1  ,{0x01}},
{0xCC,  1  ,{0x98}},
{0xCD,  1  ,{0x01}},
{0xCE,  1  ,{0xE0}},
{0xCF,  1  ,{0x02}},
{0xD0,  1  ,{0x19}},
{0xD1,  1  ,{0x02}},
{0xD2,  1  ,{0x1A}},
{0xD3,  1  ,{0x02}},
{0xD4,  1  ,{0x4E}},
{0xD5,  1  ,{0x02}},
{0xD6,  1  ,{0x85}},
{0xD7,  1  ,{0x02}},
{0xD8,  1  ,{0xA9}},
{0xD9,  1  ,{0x02}},
{0xDA,  1  ,{0xD9}},
{0xDB,  1  ,{0x02}},
{0xDC,  1  ,{0xFB}},
{0xDD,  1  ,{0x03}},
{0xDE,  1  ,{0x28}},
{0xDF,  1  ,{0x03}},
{0xE0,  1  ,{0x35}},
{0xE1,  1  ,{0x03}},
{0xE2,  1  ,{0x44}},
{0xE3,  1  ,{0x03}},
{0xE4,  1  ,{0x54}},
{0xE5,  1  ,{0x03}},
{0xE6,  1  ,{0x67}},
{0xE7,  1  ,{0x03}},
{0xE8,  1  ,{0x7D}},
{0xE9,  1  ,{0x03}},
{0xEA,  1  ,{0x91}},
{0xEB,  1  ,{0x03}},
{0xEC,  1  ,{0xA7}},
{0xED,  1  ,{0x03}},
{0xEE,  1  ,{0xCB}},
{0xEF,  1  ,{0x00}},
{0xF0,  1  ,{0x7D}},
{0xF1,  1  ,{0x00}},
{0xF2,  1  ,{0x81}},
{0xF3,  1  ,{0x00}},
{0xF4,  1  ,{0x94}},
{0xF5,  1  ,{0x00}},
{0xF6,  1  ,{0xA2}},
{0xF7,  1  ,{0x00}},
{0xF8,  1  ,{0xAF}},
{0xF9,  1  ,{0x00}},
{0xFA,  1  ,{0xBC}},
{0xFF,  1  ,{0x02}},
{0xFB,  1  ,{0x01}},
{0x00,  1  ,{0x00}},
{0x01,  1  ,{0xC8}},
{0x02,  1  ,{0x00}},
{0x03,  1  ,{0xD4}},
{0x04,  1  ,{0x00}},
{0x05,  1  ,{0xDF}},
{0x06,  1  ,{0x01}},
{0x07,  1  ,{0x06}},
{0x08,  1  ,{0x01}},
{0x09,  1  ,{0x28}},
{0x0A,  1  ,{0x01}},
{0x0B,  1  ,{0x61}},
{0x0C,  1  ,{0x01}},
{0x0D,  1  ,{0x8F}},
{0x0E,  1  ,{0x01}},
{0x0F,  1  ,{0xDA}},
{0x10,  1  ,{0x02}},
{0x11,  1  ,{0x15}},
{0x12,  1  ,{0x02}},
{0x13,  1  ,{0x17}},
{0x14,  1  ,{0x02}},
{0x15,  1  ,{0x4C}},
{0x16,  1  ,{0x02}},
{0x17,  1  ,{0x83}},
{0x18,  1  ,{0x02}},
{0x19,  1  ,{0xA7}},
{0x1A,  1  ,{0x02}},
{0x1B,  1  ,{0xD8}},
{0x1C,  1  ,{0x02}},
{0x1D,  1  ,{0xFA}},
{0x1E,  1  ,{0x03}},
{0x1F,  1  ,{0x27}},
{0x20,  1  ,{0x03}},
{0x21,  1  ,{0x35}},
{0x22,  1  ,{0x03}},
{0x23,  1  ,{0x44}},
{0x24,  1  ,{0x03}},
{0x25,  1  ,{0x55}},
{0x26,  1  ,{0x03}},
{0x27,  1  ,{0x67}},
{0x28,  1  ,{0x03}},
{0x29,  1  ,{0x7F}},
{0x2A,  1  ,{0x03}},
{0x2B,  1  ,{0x92}},
{0x2D,  1  ,{0x03}},
{0x2F,  1  ,{0xAA}},
{0x30,  1  ,{0x03}},
{0x31,  1  ,{0xCB}},
{0x32,  1  ,{0x00}},
{0x33,  1  ,{0x7D}},
{0x34,  1  ,{0x00}},
{0x35,  1  ,{0x81}},
{0x36,  1  ,{0x00}},
{0x37,  1  ,{0x94}},
{0x38,  1  ,{0x00}},
{0x39,  1  ,{0xA2}},
{0x3A,  1  ,{0x00}},
{0x3B,  1  ,{0xAF}},
{0x3D,  1  ,{0x00}},
{0x3F,  1  ,{0xBC}},
{0x40,  1  ,{0x00}},
{0x41,  1  ,{0xC8}},
{0x42,  1  ,{0x00}},
{0x43,  1  ,{0xD4}},
{0x44,  1  ,{0x00}},
{0x45,  1  ,{0xDF}},
{0x46,  1  ,{0x01}},
{0x47,  1  ,{0x06}},
{0x48,  1  ,{0x01}},
{0x49,  1  ,{0x28}},
{0x4A,  1  ,{0x01}},
{0x4B,  1  ,{0x61}},
{0x4C,  1  ,{0x01}},
{0x4D,  1  ,{0x8F}},
{0x4E,  1  ,{0x01}},
{0x4F,  1  ,{0xDA}},
{0x50,  1  ,{0x02}},
{0x51,  1  ,{0x15}},
{0x52,  1  ,{0x02}},
{0x53,  1  ,{0x17}},
{0x54,  1  ,{0x02}},
{0x55,  1  ,{0x4C}},
{0x56,  1  ,{0x02}},
{0x58,  1  ,{0x83}},
{0x59,  1  ,{0x02}},
{0x5A,  1  ,{0xA7}},
{0x5B,  1  ,{0x02}},
{0x5C,  1  ,{0xD8}},
{0x5D,  1  ,{0x02}},
{0x5E,  1  ,{0xFA}},
{0x5F,  1  ,{0x03}},
{0x60,  1  ,{0x27}},
{0x61,  1  ,{0x03}},
{0x62,  1  ,{0x35}},
{0x63,  1  ,{0x03}},
{0x64,  1  ,{0x44}},
{0x65,  1  ,{0x03}},
{0x66,  1  ,{0x55}},
{0x67,  1  ,{0x03}},
{0x68,  1  ,{0x67}},
{0x69,  1  ,{0x03}},
{0x6A,  1  ,{0x7F}},
{0x6B,  1  ,{0x03}},
{0x6C,  1  ,{0x92}},
{0x6D,  1  ,{0x03}},
{0x6E,  1  ,{0xAA}},
{0x6F,  1  ,{0x03}},
{0x70,  1  ,{0xCB}},
{0x71,  1  ,{0x00}},
{0x72,  1  ,{0x00}},
{0x73,  1  ,{0x00}},
{0x74,  1  ,{0x21}},
{0x75,  1  ,{0x00}},
{0x76,  1  ,{0x4C}},
{0x77,  1  ,{0x00}},
{0x78,  1  ,{0x6B}},
{0x79,  1  ,{0x00}},
{0x7A,  1  ,{0x85}},
{0x7B,  1  ,{0x00}},
{0x7C,  1  ,{0x9A}},
{0x7D,  1  ,{0x00}},
{0x7E,  1  ,{0xAD}},
{0x7F,  1  ,{0x00}},
{0x80,  1  ,{0xBE}},
{0x81,  1  ,{0x00}},
{0x82,  1  ,{0xCD}},
{0x83,  1  ,{0x01}},
{0x84,  1  ,{0x01}},
{0x85,  1  ,{0x01}},
{0x86,  1  ,{0x29}},
{0x87,  1  ,{0x01}},
{0x88,  1  ,{0x68}},
{0x89,  1  ,{0x01}},
{0x8A,  1  ,{0x98}},
{0x8B,  1  ,{0x01}},
{0x8C,  1  ,{0xE5}},
{0x8D,  1  ,{0x02}},
{0x8E,  1  ,{0x1E}},
{0x8F,  1  ,{0x02}},
{0x90,  1  ,{0x20}},
{0x91,  1  ,{0x02}},
{0x92,  1  ,{0x52}},
{0x93,  1  ,{0x02}},
{0x94,  1  ,{0x88}},
{0x95,  1  ,{0x02}},
{0x96,  1  ,{0xAA}},
{0x97,  1  ,{0x02}},
{0x98,  1  ,{0xD7}},
{0x99,  1  ,{0x02}},
{0x9A,  1  ,{0xF7}},
{0x9B,  1  ,{0x03}},
{0x9C,  1  ,{0x21}},
{0x9D,  1  ,{0x03}},
{0x9E,  1  ,{0x2E}},
{0x9F,  1  ,{0x03}},
{0xA0,  1  ,{0x3D}},
{0xA2,  1  ,{0x03}},
{0xA3,  1  ,{0x4C}},
{0xA4,  1  ,{0x03}},
{0xA5,  1  ,{0x5E}},
{0xA6,  1  ,{0x03}},
{0xA7,  1  ,{0x71}},
{0xA9,  1  ,{0x03}},
{0xAA,  1  ,{0x86}},
{0xAB,  1  ,{0x03}},
{0xAC,  1  ,{0x94}},
{0xAD,  1  ,{0x03}},
{0xAE,  1  ,{0xFA}},
{0xAF,  1  ,{0x00}},
{0xB0,  1  ,{0x00}},
{0xB1,  1  ,{0x00}},
{0xB2,  1  ,{0x21}},
{0xB3,  1  ,{0x00}},
{0xB4,  1  ,{0x4C}},
{0xB5,  1  ,{0x00}},
{0xB6,  1  ,{0x6B}},
{0xB7,  1  ,{0x00}},
{0xB8,  1  ,{0x85}},
{0xB9,  1  ,{0x00}},
{0xBA,  1  ,{0x9A}},
{0xBB,  1  ,{0x00}},
{0xBC,  1  ,{0xAD}},
{0xBD,  1  ,{0x00}},
{0xBE,  1  ,{0xBE}},
{0xBF,  1  ,{0x00}},
{0xC0,  1  ,{0xCD}},
{0xC1,  1  ,{0x01}},
{0xC2,  1  ,{0x01}},
{0xC3,  1  ,{0x01}},
{0xC4,  1  ,{0x29}},
{0xC5,  1  ,{0x01}},
{0xC6,  1  ,{0x68}},
{0xC7,  1  ,{0x01}},
{0xC8,  1  ,{0x98}},
{0xC9,  1  ,{0x01}},
{0xCA,  1  ,{0xE5}},
{0xCB,  1  ,{0x02}},
{0xCC,  1  ,{0x1E}},
{0xCD,  1  ,{0x02}},
{0xCE,  1  ,{0x20}},
{0xCF,  1  ,{0x02}},
{0xD0,  1  ,{0x52}},
{0xD1,  1  ,{0x02}},
{0xD2,  1  ,{0x88}},
{0xD3,  1  ,{0x02}},
{0xD4,  1  ,{0xAA}},
{0xD5,  1  ,{0x02}},
{0xD6,  1  ,{0xD7}},
{0xD7,  1  ,{0x02}},
{0xD8,  1  ,{0xF7}},
{0xD9,  1  ,{0x03}},
{0xDA,  1  ,{0x21}},
{0xDB,  1  ,{0x03}},
{0xDC,  1  ,{0x2E}},
{0xDD,  1  ,{0x03}},
{0xDE,  1  ,{0x3D}},
{0xDF,  1  ,{0x03}},
{0xE0,  1  ,{0x4C}},
{0xE1,  1  ,{0x03}},
{0xE2,  1  ,{0x5E}},
{0xE3,  1  ,{0x03}},
{0xE4,  1  ,{0x71}},
{0xE5,  1  ,{0x03}},
{0xE6,  1  ,{0x86}},
{0xE7,  1  ,{0x03}},
{0xE8,  1  ,{0x94}},
{0xE9,  1  ,{0x03}},
{0xEA,  1  ,{0xFA}},


{0xFF,  1  ,{0x01}},
{0xFB,  1  ,{0x01}},
{0xFF,  1  ,{0x02}},
{0xFB,  1  ,{0x01}},
{0xFF,  1  ,{0x04}},
{0xFB,  1  ,{0x01}},
{0xFF,  1  ,{0x00}},

{0xD3,  1  ,{0x09}}, //0x05
{0xD4,  1  ,{0x08}}, //0x04

{0x11,  0  ,{0x00}},//Sleep out
{REGFLAG_DELAY, 120, {}},

{0xFF,  1  ,{0x00}},
//{0x34,  1  ,{0x00}},	//SET_TEAR_OFF
{0x35,  1  ,{0x00}},	//SET_TEAR_ON

{0x29,  0  ,{0x00}},//Display on

{REGFLAG_DELAY, 60, {}},
{REGFLAG_END_OF_TABLE, 0x00, {}}

};

static struct LCM_setting_table lcm_sleep_out_setting[] = {
    // Sleep Out
	{0x11, 0, {0x00}},
    {REGFLAG_DELAY, 200, {}},

    // Display ON
	{0x29, 0, {0x00}},
	{REGFLAG_DELAY, 100, {}},

	{REGFLAG_END_OF_TABLE, 0x00, {}}
};


static struct LCM_setting_table lcm_sleep_mode_in_setting[] = {

	// Display off sequence
	{0x28, 1, {0x00}},
	{REGFLAG_DELAY, 60, {}},

    // Sleep Mode On
	{0x10, 1, {0x00}},
	{REGFLAG_DELAY, 120, {}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
/*
    {0xFF,1,{0x01}}, 
    {0xB1,1,{0x03}}, 
    {0xB2,1,{0xFF}}, 
    {0xED,1,{0x03}}, 
    {0xEE,1,{0xFF}}, 
    {0xFF,1,{0x02}}, 
    {0xFB,1,{0x01}}, 
    {0x30,1,{0x03}}, 
    {0x31,1,{0xFF}}, 
    {0x6F,1,{0x03}}, 
    {0x70,1,{0xFF}}, 
    {0xAD,1,{0x03}}, 
    {0xAE,1,{0xFF}}, 
    {0xE9,1,{0x03}}, 
    {0xEA,1,{0xFF}}, 
    {0xFF,1,{0x00}}, 

    {0x28, 0, {0x00}},
	//{REGFLAG_DELAY, 120, {}},
    {0xFF,1,{0x01}}, 
    {0x11,1,{0x72}}, 
    {0xFF,1,{0x00}}, 
    
    // Sleep Mode On
	// {0x10, 0, {0x00}},
	// {REGFLAG_DELAY, 120, {}},
    {REGFLAG_END_OF_TABLE, 0x00, {}}
*/
};
static struct LCM_setting_table lcm_compare_id_setting[] = {
	// Display off sequence
	{0xF0,	5,	{0x55, 0xaa, 0x52,0x08,0x00}},
	{REGFLAG_DELAY, 10, {}},

	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table lcm_backlight_level_setting[] = {
    {0x51, 1, {0xFF}},
    {REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table lcm_id_regist_setting[] = {
    {0xFF, 1, {0x01}},
    {REGFLAG_END_OF_TABLE, 0x00, {}}
};

static void push_table(struct LCM_setting_table *table, unsigned int count, unsigned char force_update)
{
	unsigned int i;

    for(i = 0; i < count; i++) {

        unsigned cmd;
        cmd = table[i].cmd;

        switch (cmd) {

            case REGFLAG_DELAY :
                MDELAY(table[i].count);
                break;

            case REGFLAG_END_OF_TABLE :
                break;

            default:
				dsi_set_cmdq_V2(cmd, table[i].count, table[i].para_list, force_update);
				//MDELAY(2);
       	}
    }

}




// ---------------------------------------------------------------------------
//  LCM Driver Implementations
// ---------------------------------------------------------------------------

static void lcm_set_util_funcs(const LCM_UTIL_FUNCS *util)
{
    memcpy(&lcm_util, util, sizeof(LCM_UTIL_FUNCS));
}


static void lcm_get_params(LCM_PARAMS *params)
{
		int data[4] = {0};
		int adcVol = 0;
		int res = -1;

	#ifdef BUILD_LK
		printf("%s, LK nt35596 debug: nt35596", __func__);
    	#else
		printk("%s, kernel nt35596 horse debug: nt35596", __func__);
    	#endif

		memset(params, 0, sizeof(LCM_PARAMS));

		params->type   = LCM_TYPE_DSI;

		params->width  = FRAME_WIDTH;
		params->height = FRAME_HEIGHT;

    // enable tearing-free
    	//	params->dbi.te_mode             = LCM_DBI_TE_MODE_VSYNC_ONLY;
    	//	params->dbi.te_edge_polarity        = LCM_POLARITY_RISING;



    		params->dsi.mode   =  SYNC_PULSE_VDO_MODE; //SYNC_PULSE_VDO_MODE; //SYNC_PULSE_VDO_MODE;  //SYNC_EVENT_VDO_MODE; 


		// DSI
		/* Command mode setting */
		//1 Three lane or Four lane
		params->dsi.LANE_NUM				= LCM_FOUR_LANE;
		//The following defined the fomat for data coming from LCD engine.
		params->dsi.data_format.color_order = LCM_COLOR_ORDER_RGB;
		params->dsi.data_format.trans_seq   = LCM_DSI_TRANS_SEQ_MSB_FIRST;
		params->dsi.data_format.padding     = LCM_DSI_PADDING_ON_LSB;
		params->dsi.data_format.format      = LCM_DSI_FORMAT_RGB888;

		// Highly depends on LCD driver capability.
		// Not support in MT6573
		params->dsi.packet_size=256;

		// Video mode setting
              //params->dsi.intermediat_buffer_num = 0;

		params->dsi.PS=LCM_PACKED_PS_24BIT_RGB888;
		//params->dsi.word_count=FRAME_WIDTH*3;
	
/*
		if (lcm_manufactory == 1)
                {
*/
			params->dsi.vertical_sync_active				= 0x02;//0x02
			params->dsi.vertical_backporch					= 0x05;//0x04//0x04//=>{0XD3,1,{0X05}} VBP(lcm) = vertical_sync_active + vertical_backporch
			params->dsi.vertical_frontporch					= 0x04; //=>{0XD4,1,{0X04}} VFP
		
			#ifdef BUILD_LK
			printf("%s, kernel nt35596 qcg vbp_5 debug: nt35596, adcVol = %d", __func__, adcVol);
			#else
			printk("%s, kernel nt35596 qcg vbp_5 debug: nt35596, adcVol = %d", __func__, adcVol);
			#endif
/*		
		}
              else
 		{
			params->dsi.vertical_sync_active				= 0x02;//0x02
			params->dsi.vertical_backporch					= 0x03;//0x04//0x04//=>{0XD3,1,{0X05}} VBP(lcm) = vertical_sync_active + vertical_backporch
			params->dsi.vertical_frontporch					= 0x04; //=>{0XD4,1,{0X04}} VFP
			#ifdef BUILD_LK
			printf("%s, kernel nt35596 vbp_3 debug: nt35596, adcVol = %d, lcm_manufactory = %d", __func__, adcVol, lcm_manufactory);
			#else
			printk("%s, kernel nt35596 vbp_3 debug: nt35596, adcVol = %d, lcm_manufactory = %d", __func__, adcVol, lcm_manufactory);
			#endif
		}
*/
		params->dsi.vertical_active_line				= FRAME_HEIGHT;


        	// Val get from MTK, #5294!!!
		params->dsi.horizontal_sync_active				= 0x05;//0x05 50  2
		params->dsi.horizontal_backporch				= 0x3c;//3c
		params->dsi.horizontal_frontporch				= 0x5e;//5e
    		//params->dsi.horizontal_blanking_pixel              = 60;
		params->dsi.horizontal_active_pixel				= FRAME_WIDTH;


	    	//params->dsi.LPX=8;

		// Bit rate calculation
		//1 Every lane speed
    		params->dsi.PLL_CLOCK=450; //450; //480;//227;//254;//254//247//400s//440s

		params->dsi.esd_check_enable = 1;
		params->dsi.customization_esd_check_enable = 1;
		params->dsi.lcm_esd_check_table[0].cmd          = 0x0a;
		params->dsi.lcm_esd_check_table[0].count        = 1;
		params->dsi.lcm_esd_check_table[0].para_list[0] = 0x9c;

}

void set_reset_pin_value_qcg(unsigned int x)
{
	mt_set_gpio_mode(GPIO_LCM_RST, GPIO_LCM_RST_M_GPIO);
	mt_set_gpio_dir(GPIO_LCM_RST, GPIO_DIR_OUT);
	mt_set_gpio_out(GPIO_LCM_RST, x);
}

static void lcm_init(void)
{
	//LCM_DEBUG("[Hxw][func:%s][line:%d]\n", __func__, __LINE__);

//agold_lcm_power_on();
    #ifdef BUILD_LK
		printf("%s, LK nt35596 qcg debug: nt35596", __func__);
    #else
		printk("%s, kernel nt35596 qcg horse debug: nt35596", __func__);
    #endif

	MDELAY(10);
	set_reset_pin_value_qcg(1); // page 142
	MDELAY(5); 
	set_reset_pin_value_qcg(0);
	MDELAY(5); 	// page 142
	set_reset_pin_value_qcg(1);
	MDELAY(5); 
	set_reset_pin_value_qcg(0);
	MDELAY(5); 	// page 142
	set_reset_pin_value_qcg(1);
	MDELAY(20);  
/*
	if(lcm_manufactory == 1)
	{
*/
	push_table(lcm_initialization_qcg_dbl_setting, sizeof(lcm_initialization_qcg_dbl_setting) / sizeof(struct LCM_setting_table), 1);
/*
	}
	else
	{
		push_table(lcm_initialization_setting, sizeof(lcm_initialization_setting) / sizeof(struct LCM_setting_table), 1);
	}
*/
	
}
#if 0
static void lcm_suspend_shut_down(void)
{
	unsigned int data_array[8];

	data_array[0]= 0x00002200;
	dsi_set_cmdq(&data_array, 1, 1);
	MDELAY(10);
	
	data_array[0]= 0x00023902;
	data_array[1]= 0x00000028;
	dsi_set_cmdq(&data_array, 2, 1);
	MDELAY(10);
	
	data_array[0]= 0x00023902;
	data_array[1]= 0x00000010;
	dsi_set_cmdq(&data_array, 2, 1);
	MDELAY(120);
}
#endif

static void lcm_suspend(void)
{
	//LCM_DEBUG("[Hxw][func:%s][line:%d]\n", __func__, __LINE__);

	push_table(lcm_sleep_mode_in_setting, sizeof(lcm_sleep_mode_in_setting) / sizeof(struct LCM_setting_table), 1);
	//lcm_suspend_shut_down();
	unsigned int data_array[16];
/*
	data_array[0]=0x00280500; // Display Off
	dsi_set_cmdq(data_array, 1, 1);
	data_array[0] = 0x00100500; // Sleep In
	dsi_set_cmdq(data_array, 1, 1);
	MDELAY(120);
//	SET_RESET_PIN(0);
*/
	//MDELAY(10);
	//SET_RESET_PIN(1); // page 142
	//MDELAY(20); 
	set_reset_pin_value_qcg(0);
	//MDELAY(1); 	// page 142
	//SET_RESET_PIN(1);
	MDELAY(120);  

//agold_lcm_power_down();

}


static void lcm_resume(void)
{
	lcm_init();
}

#if (LCM_DSI_CMD_MODE)
static void lcm_update(unsigned int x, unsigned int y,
                       unsigned int width, unsigned int height)
{
	unsigned int x0 = x;
	unsigned int y0 = y;
	unsigned int x1 = x0 + width - 1;
	unsigned int y1 = y0 + height - 1;

	unsigned char x0_MSB = ((x0>>8)&0xFF);
	unsigned char x0_LSB = (x0&0xFF);
	unsigned char x1_MSB = ((x1>>8)&0xFF);
	unsigned char x1_LSB = (x1&0xFF);
	unsigned char y0_MSB = ((y0>>8)&0xFF);
	unsigned char y0_LSB = (y0&0xFF);
	unsigned char y1_MSB = ((y1>>8)&0xFF);
	unsigned char y1_LSB = (y1&0xFF);

	unsigned int data_array[16];

	data_array[0]= 0x00053902;
	data_array[1]= (x1_MSB<<24)|(x0_LSB<<16)|(x0_MSB<<8)|0x2a;
	data_array[2]= (x1_LSB);
	dsi_set_cmdq(data_array, 3, 1);

	data_array[0]= 0x00053902;
	data_array[1]= (y1_MSB<<24)|(y0_LSB<<16)|(y0_MSB<<8)|0x2b;
	data_array[2]= (y1_LSB);
	dsi_set_cmdq(data_array, 3, 1);

	data_array[0]= 0x00290508; //HW bug, so need send one HS packet
	dsi_set_cmdq(data_array, 1, 1);

	data_array[0]= 0x002c3909;
	dsi_set_cmdq(data_array, 1, 0);

}
#endif

static unsigned int lcm_compare_id(void)
{
	unsigned int id=0;
	unsigned char buffer[2];
	unsigned int array[16];
	int data[4] = {0};
	int adcVol = 0;
	int res = -1;
	unsigned int lcm_qcg = 0;
    	
	unsigned char buffer_1[12];
	unsigned char buffer_2[12];
	unsigned char buffer_3[12];
	
	set_reset_pin_value_qcg(1);
	set_reset_pin_value_qcg(0);
	MDELAY(1);

	set_reset_pin_value_qcg(1);
	MDELAY(20);

	array[0] = 0x00023700;// read id return two byte,version and id
	dsi_set_cmdq(array, 1, 1);

	read_reg_v2(0xF4, buffer, 2);
	
//	res = IMM_GetOneChannelValue(2, data, NULL);
//	adcVol = data[0] * 1000 + data[1] * 10;

	id = buffer[0]; //we only need ID

    #ifdef BUILD_LK
		adcVol = PMIC_IMM_GetOneChannelValue(AUX_CH12, 5, 1);
		printf("%s, LK nt35596 qcg debug: nt35596 id = 0x%08x\n", __func__, id);
		printf("%s, LK nt35596 qcg debug: nt35596 comp adcVol = %d\n", __func__, adcVol);
    #else
		printk("%s, kernel nt35596 qcg horse debug: nt35596 id = 0x%08x\n", __func__, id);
    #endif

	push_table(lcm_id_regist_setting, sizeof(lcm_id_regist_setting) / sizeof(struct LCM_setting_table), 1);	

	read_reg_v2(0x44, buffer_1, 2);
	read_reg_v2(0x45, buffer_2, 2);
	read_reg_v2(0x46, buffer_3, 2);
	
	#ifdef BUILD_LK
		printf("%s, lk nt35596 qcg horse debug: 0X44 = 0x%08x, 0x%08x\n", __func__, buffer_1[0], buffer_1[1]);
		printf("%s, lk nt35596 qcg horse debug: 0X45 = 0x%08x, 0x%08x\n", __func__, buffer_2[0], buffer_2[1]);
		printf("%s, lk nt35596 qcg horse debug: 0X46 = 0x%08x, 0x%08x\n", __func__, buffer_3[0], buffer_3[1]);
	#else
		printk("%s, kernel qcg nt35596 horse debug: 0X44 = 0x%08x, 0x%08x\n", __func__, buffer_1[0], buffer_1[1]);
		printk("%s, kernel qcg nt35596 horse debug: 0X45 = 0x%08x, 0x%08x\n", __func__, buffer_2[0], buffer_2[1]);
		printk("%s, kernel qcg nt35596 horse debug: 0X46 = 0x%08x, 0x%08x\n", __func__, buffer_3[0], buffer_3[1]);
	#endif

	if(buffer_1[0] == 0x12 && buffer_2[0] == 0xb4 && buffer_3[0] == 0x56)
	{
	#ifdef BUILD_LK
		printf("%s, lk nt35596 QCG horse debug: lcm_qcg = %d\n", __func__,lcm_qcg);
	#else
		printk("%s, kernel nt35596 QCG horse debug: lcm_qcg = %d\n", __func__,lcm_qcg);
	#endif
		lcm_qcg = 1;
	}

    if(id == LCM_ID_NT35596 && lcm_qcg == 1)
    	return 1;
    else
        return 0;


}
static unsigned int lcm_ata_check(unsigned char *buffer_bak)
{
	unsigned int id=0;
	unsigned char buffer[2];
	unsigned int array[16];
	int data[4] = {0};
	int adcVol = 0;
	int res = -1;
	unsigned int lcm_qcg = 0;
    	
	unsigned char buffer_1[12];
	unsigned char buffer_2[12];
	unsigned char buffer_3[12];
	
	set_reset_pin_value_qcg(1);
	set_reset_pin_value_qcg(0);
	MDELAY(1);

	set_reset_pin_value_qcg(1);
	MDELAY(20);

	array[0] = 0x00023700;// read id return two byte,version and id
	dsi_set_cmdq(array, 1, 1);

	read_reg_v2(0xF4, buffer, 2);
	
//	res = IMM_GetOneChannelValue(2, data, NULL);
//	adcVol = data[0] * 1000 + data[1] * 10;

	id = buffer[0]; //we only need ID

   
    if(id == LCM_ID_NT35596)
    	return 1;
    else
        return 0;
}

static unsigned int lcm_esd_check(void)
{
 #ifdef BUILD_LK
    printf("%s, LK\n",__func__);
#else
    printk("%s, kernel\n",__func__);
#endif
    unsigned char buffer_1[12];
    unsigned int array[16];
    int i;
    unsigned char fResult;

    for(i = 0;i < 11;i++)
    buffer_1[i] = 0x00;

    //---------------------------------
    // Set Maximum Return Size
    //---------------------------------
    array[0] = 0x00013700;
    dsi_set_cmdq(array, 1, 1);

    //---------------------------------
    // Read [9Ch, 00h, ECC] + Error Report(4 Bytes)
    //---------------------------------
    push_table(lcm_id_regist_setting, sizeof(lcm_id_regist_setting) / sizeof(struct LCM_setting_table), 1);

    read_reg_v2(0x0A, buffer_1, 7);
#ifndef BUILD_LK
    printk(KERN_EMERG "lcm_esd_check: read(0x0A)==========\n");
    for(i = 0;i < 7;i++)
    printk(KERN_EMERG "buffer_1[%d]:0x%x \n",i,buffer_1[i]);
#endif

    if ( 0x9c == buffer_1[0] && 0 == buffer_1[3])
    return false;
    else
    return true;

}

static unsigned int lcm_esd_recover(void)
{
	lcm_init();
	//lcm_resume();

	return TRUE;
}



LCM_DRIVER nt35596_fhd_dsi_vdo_truly_qcg_lcm_drv = 
{
    .name			= "nt35596_fhd_dsi_vdo_truly_qcg",
	.set_util_funcs = lcm_set_util_funcs,
	.get_params     = lcm_get_params,
	.init           = lcm_init,
	.suspend        = lcm_suspend,
	.resume         = lcm_resume,
	.compare_id     = lcm_compare_id,
        .ata_check     =lcm_ata_check,
	.esd_check = lcm_esd_check,
	.esd_recover = lcm_esd_recover,
#if (LCM_DSI_CMD_MODE)
    .update         = lcm_update,
#endif
    };
